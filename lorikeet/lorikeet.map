Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_mulhi3.o)
                              lorikeet.o (__mulhi3)
/usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_mulsi3.o)
                              lorikeet.o (__mulsi3)
/usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_udivmodsi4.o)
                              lorikeet.o (__udivmodsi4)
/usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o (exit)
/usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
                              lorikeet.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
                              lorikeet.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

j                   0x2               lorikeet.o
i                   0x2               lorikeet.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
LOAD lorikeet.o
LOAD /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/libm.a
LOAD /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x3ac
 *(.vectors)
 .vectors       0x00000000       0x14 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000014                . = ALIGN (0x2)
                0x00000014                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000014        0x0 linker stubs
 *(.trampolines*)
                0x00000014                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000014                __ctors_start = .
 *(.ctors)
                0x00000014                __ctors_end = .
                0x00000014                __dtors_start = .
 *(.dtors)
                0x00000014                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000014        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
                0x00000014                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000014        0x8 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000001c       0x16 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
                0x0000001c                __do_copy_data
 .init4         0x00000032       0x10 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
                0x00000032                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000042        0x4 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
 *(.init9)
 *(.text)
 .text          0x00000046        0x2 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
                0x00000046                __vector_1
                0x00000046                __bad_interrupt
                0x00000046                __vector_6
                0x00000046                __vector_3
                0x00000046                __vector_7
                0x00000046                __vector_5
                0x00000046                __vector_4
                0x00000046                __vector_2
                0x00000046                __vector_8
 .text          0x00000048      0x2c6 lorikeet.o
                0x000001a2                map
                0x00000230                main
                0x000000e8                __vector_9
                0x00000094                get
                0x000000fc                playTone
                0x00000048                set
 .text          0x0000030e        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_mulhi3.o)
 .text          0x0000030e        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_mulsi3.o)
 .text          0x0000030e        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_udivmodsi4.o)
 .text          0x0000030e        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 .text          0x0000030e        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
 .text          0x0000030e        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
                0x0000030e                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000030e       0x24 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_mulhi3.o)
                0x0000030e                __mulhi3
 .text.libgcc   0x00000332       0x32 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_mulsi3.o)
                0x00000332                __mulsi3
 .text.libgcc   0x00000364       0x44 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_udivmodsi4.o)
                0x00000364                __udivmodsi4
 .text.libgcc   0x000003a8        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x000003a8        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
 .text.libgcc   0x000003a8        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
                0x000003a8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000003a8        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
                0x000003a8                exit
                0x000003a8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000003a8        0x4 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x000003ac                _etext = .

.data           0x00800060        0xa load address 0x000003ac
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
 .data          0x00800060        0xa lorikeet.o
                0x00800068                tempo
                0x00800066                max_count
                0x00800064                beats
                0x00800060                melody
 .data          0x0080006a        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_mulhi3.o)
 .data          0x0080006a        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_mulsi3.o)
 .data          0x0080006a        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_udivmodsi4.o)
 .data          0x0080006a        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 .data          0x0080006a        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
 .data          0x0080006a        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080006a                . = ALIGN (0x2)
                0x0080006a                _edata = .
                0x0080006a                PROVIDE (__data_end, .)

.bss            0x0080006a        0xa load address 0x000003b6
                0x0080006a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006a        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
 .bss           0x0080006a        0x6 lorikeet.o
                0x0080006a                tone
                0x0080006b                beat
                0x0080006c                duration
 .bss           0x00800070        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_mulhi3.o)
 .bss           0x00800070        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_mulsi3.o)
 .bss           0x00800070        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_udivmodsi4.o)
 .bss           0x00800070        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 .bss           0x00800070        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
 .bss           0x00800070        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800070        0x4 lorikeet.o
                0x00800070                j
                0x00800072                i
                0x00800074                PROVIDE (__bss_end, .)
                0x000003ac                __data_load_start = LOADADDR (.data)
                0x000003b6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800074        0x0
                0x00800074                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800074                PROVIDE (__noinit_end, .)
                0x00800074                _end = .
                0x00800074                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xf24
 *(.stab)
 .stab          0x00000000      0x69c /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
 .stab          0x0000069c      0x888 lorikeet.o
                                0x894 (size before relaxing)

.stabstr        0x00000000      0x920
 *(.stabstr)
 .stabstr       0x00000000      0x920 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(lorikeet.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__bss_end                                         /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
                                                  lorikeet.o
__do_copy_data                                    /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
                                                  lorikeet.o
__heap_end                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__init                                            /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__mulhi3                                          /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_mulhi3.o)
                                                  lorikeet.o
__mulsi3                                          /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_mulsi3.o)
                                                  lorikeet.o
__stack                                           /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__udivmodsi4                                      /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_udivmodsi4.o)
                                                  lorikeet.o
__vector_1                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_2                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_3                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_4                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_5                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_6                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_7                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_8                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_9                                        lorikeet.o
                                                  /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_default                                  /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vectors                                         /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
_exit                                             /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
beat                                              lorikeet.o
beats                                             lorikeet.o
duration                                          lorikeet.o
exit                                              /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
get                                               lorikeet.o
i                                                 lorikeet.o
j                                                 lorikeet.o
main                                              lorikeet.o
                                                  /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
map                                               lorikeet.o
max_count                                         lorikeet.o
melody                                            lorikeet.o
playTone                                          lorikeet.o
set                                               lorikeet.o
tempo                                             lorikeet.o
tone                                              lorikeet.o
