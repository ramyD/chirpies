   1               		.file	"gentoo.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
  74               	.global	set
  76               	set:
  77               		.stabd	46,0,0
  79               	.Ltext1:
   1:../getset.h   **** //////////////////////////////////////////////////////
   2:../getset.h   **** //
   3:../getset.h   **** // GET/SET ABSTRACTION LAYER FOR ATTINY13
   4:../getset.h   **** //
   5:../getset.h   **** //////////////////////////////////////////////////////
   6:../getset.h   **** //
   7:../getset.h   **** // USAGE
   8:../getset.h   **** //         get(gPin) to get input state from pin
   9:../getset.h   **** //             The gPin variable can be anything from 
  10:../getset.h   **** //             PB0 to PB4 to get digital input and 
  11:../getset.h   **** //             ADC1 to ADC3 to get analog input.
  12:../getset.h   **** //             The return value can be HIGH (1) or
  13:../getset.h   **** //             LOW (0) for digital and 0..255 for analog.
  14:../getset.h   **** //
  15:../getset.h   **** //         set(sPin, value) to set state of pin
  16:../getset.h   **** //             The sPin variable can be anything from
  17:../getset.h   **** //             PB0 to PB4 to set the output (0-5V) of
  18:../getset.h   **** //             the output pin.
  19:../getset.h   **** //             The value variable can be HIGH (1) or
  20:../getset.h   **** //             LOW (0).
  21:../getset.h   **** //
  22:../getset.h   **** //
  23:../getset.h   **** // (CC) Vincent Leclerc 10/2006
  24:../getset.h   **** //
  25:../getset.h   **** //////////////////////////////////////////////////////
  26:../getset.h   **** 
  27:../getset.h   **** #include <avr/interrupt.h>
  28:../getset.h   **** 
  29:../getset.h   **** #define PB0  0
  30:../getset.h   **** #define PB1  1
  31:../getset.h   **** #define PB2  2
  32:../getset.h   **** #define PB3  3
  33:../getset.h   **** #define PB4  4
  34:../getset.h   **** 
  35:../getset.h   **** #define ADC1 11
  36:../getset.h   **** #define ADC2 12
  37:../getset.h   **** #define ADC3 13
  38:../getset.h   **** 
  39:../getset.h   **** #define HIGH 1
  40:../getset.h   **** #define LOW  0
  41:../getset.h   **** 
  42:../getset.h   **** void set(uint8_t sPin, uint8_t value){
  81               	.LM0:
  82               	.LFBB1:
  83               	/* prologue: function */
  84               	/* frame size = 0 */
  85 0000 382F      		mov r19,r24
  43:../getset.h   **** 	if (value) PORTB |= 1 << sPin; // set pin high
  87               	.LM1:
  88 0002 6623      		tst r22
  89 0004 01F0      		breq .L2
  90 0006 28B3      		in r18,56-32
  91 0008 81E0      		ldi r24,lo8(1)
  92 000a 90E0      		ldi r25,hi8(1)
  93 000c 032E      		mov r0,r19
  94 000e 00C0      		rjmp 2f
  95 0010 880F      	1:	lsl r24
  96 0012 991F      		rol r25
  97 0014 0A94      	2:	dec r0
  98 0016 02F4      		brpl 1b
  99 0018 282B      		or r18,r24
 100 001a 28BB      		out 56-32,r18
 101 001c 00C0      		rjmp .L3
 102               	.L2:
  44:../getset.h   **** 	else PORTB &= ~(1 << sPin); // set pin low
 104               	.LM2:
 105 001e 28B3      		in r18,56-32
 106 0020 81E0      		ldi r24,lo8(1)
 107 0022 90E0      		ldi r25,hi8(1)
 108 0024 032E      		mov r0,r19
 109 0026 00C0      		rjmp 2f
 110 0028 880F      	1:	lsl r24
 111 002a 991F      		rol r25
 112 002c 0A94      	2:	dec r0
 113 002e 02F4      		brpl 1b
 114 0030 8095      		com r24
 115 0032 8223      		and r24,r18
 116 0034 88BB      		out 56-32,r24
 117               	.L3:
  45:../getset.h   **** 	DDRB |= 1 << sPin; // set DDRB pin to output
 119               	.LM3:
 120 0036 27B3      		in r18,55-32
 121 0038 81E0      		ldi r24,lo8(1)
 122 003a 90E0      		ldi r25,hi8(1)
 123 003c 00C0      		rjmp 2f
 124 003e 880F      	1:	lsl r24
 125 0040 991F      		rol r25
 126 0042 3A95      	2:	dec r19
 127 0044 02F4      		brpl 1b
 128 0046 282B      		or r18,r24
 129 0048 27BB      		out 55-32,r18
 130               	/* epilogue start */
  46:../getset.h   **** }
 132               	.LM4:
 133 004a 0895      		ret
 135               	.Lscope1:
 137               		.stabd	78,0,0
 140               	.global	get
 142               	get:
 143               		.stabd	46,0,0
  47:../getset.h   **** 
  48:../getset.h   **** uint8_t get(uint8_t gPin){
 145               	.LM5:
 146               	.LFBB2:
 147               	/* prologue: function */
 148               	/* frame size = 0 */
 149 004c 282F      		mov r18,r24
  49:../getset.h   **** 	if (gPin > 9) { // analog input
 151               	.LM6:
 152 004e 8A30      		cpi r24,lo8(10)
 153 0050 00F0      		brlo .L6
  50:../getset.h   **** 		ADCSRA |= 0x88;	// enable ADC (turn on ADC power) & enable ADC interrupts
 155               	.LM7:
 156 0052 86B1      		in r24,38-32
 157 0054 8868      		ori r24,lo8(-120)
 158 0056 86B9      		out 38-32,r24
  51:../getset.h   **** 		ADMUX |= 0x20; // set to left-adjusted result
 160               	.LM8:
 161 0058 3D9A      		sbi 39-32,5
  52:../getset.h   **** 		sei(); // turn on interrupts (if not already on)	
 163               	.LM9:
 164               	/* #APP */
 165               	 ;  52 "../getset.h" 1
 166 005a 7894      		sei
 167               	 ;  0 "" 2
  53:../getset.h   **** 		ADMUX = (ADMUX & 0xFC) | (gPin-10); // set channel
 169               	.LM10:
 170               	/* #NOAPP */
 171 005c 87B1      		in r24,39-32
 172 005e 2A50      		subi r18,lo8(-(-10))
 173 0060 8C7F      		andi r24,lo8(-4)
 174 0062 822B      		or r24,r18
 175 0064 87B9      		out 39-32,r24
  54:../getset.h   **** 		ADCSRA |= 0x50;	// clear hardware "conversion complete" flag & start conversion
 177               	.LM11:
 178 0066 86B1      		in r24,38-32
 179 0068 8065      		ori r24,lo8(80)
 180 006a 86B9      		out 38-32,r24
 181               	.L7:
  55:../getset.h   **** 		while(ADCSRA & (1 << ADSC));	// wait until conversion complete
 183               	.LM12:
 184 006c 3699      		sbic 38-32,6
 185 006e 00C0      		rjmp .L7
  56:../getset.h   **** 		ADCSRA &= 0x77; // disable ADC interrupts
 187               	.LM13:
 188 0070 86B1      		in r24,38-32
 189 0072 8777      		andi r24,lo8(119)
 190 0074 86B9      		out 38-32,r24
  57:../getset.h   **** 		return (ADCH);	// read ADC (8 M.S.B.);
 192               	.LM14:
 193 0076 95B1      		in r25,37-32
 194 0078 00C0      		rjmp .L8
 195               	.L6:
  58:../getset.h   **** 	
  59:../getset.h   **** 	} else { // digital input
  60:../getset.h   **** 		DDRB  &= ~(1 << gPin); // set DDRB pin to input
 197               	.LM15:
 198 007a 37B3      		in r19,55-32
 199 007c 81E0      		ldi r24,lo8(1)
 200 007e 90E0      		ldi r25,hi8(1)
 201 0080 00C0      		rjmp 2f
 202 0082 880F      	1:	lsl r24
 203 0084 991F      		rol r25
 204 0086 2A95      	2:	dec r18
 205 0088 02F4      		brpl 1b
 206 008a 282F      		mov r18,r24
 207 008c 2095      		com r18
 208 008e 2323      		and r18,r19
 209 0090 27BB      		out 55-32,r18
  61:../getset.h   **** 		PORTB |= 1 << gPin; // pullup
 211               	.LM16:
 212 0092 28B3      		in r18,56-32
 213 0094 282B      		or r18,r24
 214 0096 28BB      		out 56-32,r18
  62:../getset.h   **** 		return PINB & (1 << gPin); // return high or low
 216               	.LM17:
 217 0098 96B3      		in r25,54-32
 218 009a 9823      		and r25,r24
 219               	.L8:
  63:../getset.h   **** 	}
  64:../getset.h   **** }
 221               	.LM18:
 222 009c 892F      		mov r24,r25
 223               	/* epilogue start */
 224 009e 0895      		ret
 226               	.Lscope2:
 228               		.stabd	78,0,0
 230               	.global	__vector_9
 232               	__vector_9:
 233               		.stabd	46,0,0
  65:../getset.h   **** 
  66:../getset.h   **** SIGNAL(SIG_ADC)
  67:../getset.h   **** {
 235               	.LM19:
 236               	.LFBB3:
 237 00a0 1F92      		push __zero_reg__
 238 00a2 0F92      		push r0
 239 00a4 0FB6      		in r0,__SREG__
 240 00a6 0F92      		push r0
 241 00a8 1124      		clr __zero_reg__
 242               	/* prologue: Signal */
 243               	/* frame size = 0 */
 244               	/* epilogue start */
  68:../getset.h   **** 	// need this for the ADC to work properly	
  69:../getset.h   **** }
 246               	.LM20:
 247 00aa 0F90      		pop r0
 248 00ac 0FBE      		out __SREG__,r0
 249 00ae 0F90      		pop r0
 250 00b0 1F90      		pop __zero_reg__
 251 00b2 1895      		reti
 253               	.Lscope3:
 255               		.stabd	78,0,0
 257               	.global	playTone
 259               	playTone:
 260               		.stabd	46,0,0
 262               	.Ltext2:
   1:gentoo.c      **** #include <avr/io.h>
   2:gentoo.c      **** #include <avr/signal.h>
   3:gentoo.c      **** #include <util/delay.h>
   4:gentoo.c      **** #include "../getset.h"
   5:gentoo.c      **** 
   6:gentoo.c      **** /* the GENTOO reacts to light.
   7:gentoo.c      ****  * the lighter it gets, the slower appart the chirps become
   8:gentoo.c      ****  * the darker is get, the closer the chirps become
   9:gentoo.c      ****  */
  10:gentoo.c      **** 
  11:gentoo.c      **** // TONES  ==========================================
  12:gentoo.c      **** // Start by defining the relationship between 
  13:gentoo.c      **** //       note, period, &  frequency. 
  14:gentoo.c      **** #define  lb    4065    // 246 Hz
  15:gentoo.c      **** #define  c     3830    // 261 Hz
  16:gentoo.c      **** #define  d     3400    // 294 Hz
  17:gentoo.c      **** #define  ds    3215    // 311 Hz
  18:gentoo.c      **** #define  e     3038    // 329 Hz
  19:gentoo.c      **** #define  f     2864    // 349 Hz
  20:gentoo.c      **** #define  fs    2702    // 370 Hz
  21:gentoo.c      **** #define  g     2550    // 392 Hz
  22:gentoo.c      **** #define  a     2272    // 440 Hz
  23:gentoo.c      **** #define  as    2145    // 446 Hz
  24:gentoo.c      **** #define  b     2028    // 493 Hz
  25:gentoo.c      **** #define  C     1912    // 523 Hz
  26:gentoo.c      **** #define  CS    1805    // 554 Hz
  27:gentoo.c      **** #define  D     1702    // 587 Hz
  28:gentoo.c      **** #define  DS    1608    // 622 Hz
  29:gentoo.c      **** #define  E     1516    // 659 Hz
  30:gentoo.c      **** #define  F     1432    // 698 Hz
  31:gentoo.c      **** #define  G     1277    // 783 Hz
  32:gentoo.c      **** #define  A     1136    // 880 Hz
  33:gentoo.c      **** // Define a special note, 'R', to represent a rest
  34:gentoo.c      **** 
  35:gentoo.c      **** // MELODY and TIMING  =======================================
  36:gentoo.c      **** //  melody[] is an array of notes, accompanied by beats[], 
  37:gentoo.c      **** //  which sets each note's relative length (higher #, longer note) 
  38:gentoo.c      **** uint16_t melody[] = {D, DS, E, F, G, A, F, A, 10000};
  39:gentoo.c      **** uint8_t beats[]  = {4,  4,  3, 3, 3, 2, 2, 2, 1};
  40:gentoo.c      **** 
  41:gentoo.c      **** uint16_t max_count = sizeof(melody); // Melody length, for looping.
  42:gentoo.c      **** 
  43:gentoo.c      **** // Set overall tempo
  44:gentoo.c      **** //uint16_t tempo = 1000;
  45:gentoo.c      **** uint16_t tempo = 315;
  46:gentoo.c      **** 
  47:gentoo.c      **** // Initialize core variables
  48:gentoo.c      **** uint8_t tone = 0;
  49:gentoo.c      **** uint8_t beat = 0;
  50:gentoo.c      **** uint32_t duration  = 0;
  51:gentoo.c      **** 
  52:gentoo.c      **** uint16_t i;
  53:gentoo.c      **** 
  54:gentoo.c      **** // PLAY TONE  ==============================================
  55:gentoo.c      **** // Pulse the speaker to play a tone for a particular duration
  56:gentoo.c      **** void playTone(void) {
 264               	.LM21:
 265               	.LFBB4:
 266 00b4 AF92      		push r10
 267 00b6 BF92      		push r11
 268 00b8 CF92      		push r12
 269 00ba DF92      		push r13
 270 00bc EF92      		push r14
 271 00be FF92      		push r15
 272 00c0 0F93      		push r16
 273 00c2 1F93      		push r17
 274               	/* prologue: function */
 275               	/* frame size = 0 */
  57:gentoo.c      ****   uint32_t elapsed_time = 0;
  58:gentoo.c      ****   if (tone > 0) { // if this isn't a Rest beat, while the tone has 
 277               	.LM22:
 278 00c4 2091 0000 		lds r18,tone
 279 00c8 2223      		tst r18
 280 00ca 01F4      		brne .+2
 281 00cc 00C0      		rjmp .L21
  59:gentoo.c      ****     //  played less long than 'duration', pulse speaker HIGH and LOW
  60:gentoo.c      ****     while (elapsed_time < duration) {
 283               	.LM23:
 284 00ce A090 0000 		lds r10,duration
 285 00d2 B090 0000 		lds r11,(duration)+1
 286 00d6 C090 0000 		lds r12,(duration)+2
 287 00da D090 0000 		lds r13,(duration)+3
 288 00de A091 0000 		lds r26,i
 289 00e2 8091 0000 		lds r24,i+1
 290 00e6 40E0      		ldi r20,lo8(0)
 291 00e8 50E0      		ldi r21,hi8(0)
 292 00ea 60E0      		ldi r22,hlo8(0)
 293 00ec 70E0      		ldi r23,hhi8(0)
  61:gentoo.c      ****       
  62:gentoo.c      ****       set(PB3, 1); //pull PB3 high
  63:gentoo.c      ****       for (i=0; i<tone; i++) asm volatile("nop\n\t"::); //pause
 295               	.LM24:
 296 00ee E22F      		mov r30,r18
 297 00f0 F0E0      		ldi r31,lo8(0)
  64:gentoo.c      ****       set(PB3, 0); // pull PB3 low
  65:gentoo.c      ****       for (i=0; i<tone; i++) asm volatile("nop\n\t"::); //pause
 299               	.LM25:
 300 00f2 E22E      		mov r14,r18
 301 00f4 FF24      		clr r15
 302 00f6 00E0      		ldi r16,lo8(0)
 303 00f8 10E0      		ldi r17,hi8(0)
 304 00fa 00C0      		rjmp .L15
 305               	.L20:
 306               	.LBB16:
 307               	.LBB17:
 309               	.Ltext3:
 311               	.LM26:
 312 00fc C39A      		sbi 56-32,3
 314               	.LM27:
 315 00fe BB9A      		sbi 55-32,3
 316 0100 20E0      		ldi r18,lo8(0)
 317 0102 30E0      		ldi r19,hi8(0)
 318 0104 00C0      		rjmp .L16
 319               	.L17:
 320               	.LBE17:
 321               	.LBE16:
 323               	.Ltext4:
 325               	.LM28:
 326               	/* #APP */
 327               	 ;  63 "gentoo.c" 1
 328 0106 0000      		nop
 329               		
 330               	 ;  0 "" 2
 331               	/* #NOAPP */
 332 0108 2F5F      		subi r18,lo8(-(1))
 333 010a 3F4F      		sbci r19,hi8(-(1))
 334               	.L16:
 335 010c CF01      		movw r24,r30
 336 010e AE2F      		mov r26,r30
 337 0110 892F      		mov r24,r25
 338 0112 2E17      		cp r18,r30
 339 0114 3F07      		cpc r19,r31
 340 0116 00F0      		brlo .L17
 341               	.LBB18:
 342               	.LBB19:
 344               	.Ltext5:
 346               	.LM29:
 347 0118 C398      		cbi 56-32,3
 349               	.LM30:
 350 011a BB9A      		sbi 55-32,3
 351 011c 20E0      		ldi r18,lo8(0)
 352 011e 30E0      		ldi r19,hi8(0)
 353 0120 00C0      		rjmp .L18
 354               	.L19:
 355               	.LBE19:
 356               	.LBE18:
 358               	.Ltext6:
 360               	.LM31:
 361               	/* #APP */
 362               	 ;  65 "gentoo.c" 1
 363 0122 0000      		nop
 364               		
 365               	 ;  0 "" 2
 366               	/* #NOAPP */
 367 0124 2F5F      		subi r18,lo8(-(1))
 368 0126 3F4F      		sbci r19,hi8(-(1))
 369               	.L18:
 370 0128 2E17      		cp r18,r30
 371 012a 3F07      		cpc r19,r31
 372 012c 00F0      		brlo .L19
 373 012e 4E0D      		add r20,r14
 374 0130 5F1D      		adc r21,r15
 375 0132 601F      		adc r22,r16
 376 0134 711F      		adc r23,r17
 377               	.L15:
 379               	.LM32:
 380 0136 4A15      		cp r20,r10
 381 0138 5B05      		cpc r21,r11
 382 013a 6C05      		cpc r22,r12
 383 013c 7D05      		cpc r23,r13
 384 013e 00F0      		brlo .L20
 385 0140 A093 0000 		sts i,r26
 386 0144 8093 0000 		sts i+1,r24
 387               	.L21:
 388               	/* epilogue start */
  66:gentoo.c      **** 
  67:gentoo.c      ****       // Keep track of how long we pulsed
  68:gentoo.c      ****       elapsed_time += (tone);
  69:gentoo.c      ****     } 
  70:gentoo.c      ****   }
  71:gentoo.c      **** }
 390               	.LM33:
 391 0148 1F91      		pop r17
 392 014a 0F91      		pop r16
 393 014c FF90      		pop r15
 394 014e EF90      		pop r14
 395 0150 DF90      		pop r13
 396 0152 CF90      		pop r12
 397 0154 BF90      		pop r11
 398 0156 AF90      		pop r10
 399 0158 0895      		ret
 404               	.Lscope4:
 406               		.stabd	78,0,0
 413               	.global	map
 415               	map:
 416               		.stabd	46,0,0
  72:gentoo.c      **** 
  73:gentoo.c      **** uint32_t map(uint32_t x, uint32_t in_min, uint32_t in_max, uint32_t out_min, uint32_t out_max)
  74:gentoo.c      **** {
 418               	.LM34:
 419               	.LFBB5:
 420 015a 2F92      		push r2
 421 015c 3F92      		push r3
 422 015e 4F92      		push r4
 423 0160 5F92      		push r5
 424 0162 6F92      		push r6
 425 0164 7F92      		push r7
 426 0166 8F92      		push r8
 427 0168 9F92      		push r9
 428 016a AF92      		push r10
 429 016c BF92      		push r11
 430 016e CF92      		push r12
 431 0170 DF92      		push r13
 432 0172 EF92      		push r14
 433 0174 FF92      		push r15
 434 0176 0F93      		push r16
 435 0178 1F93      		push r17
 436 017a DF93      		push r29
 437 017c CF93      		push r28
 438 017e CDB7      		in r28,__SP_L__
 439 0180 DEB7      		in r29,__SP_H__
 440               	/* prologue: function */
 441               	/* frame size = 0 */
 442 0182 3B01      		movw r6,r22
 443 0184 4C01      		movw r8,r24
 444 0186 1901      		movw r2,r18
 445 0188 2A01      		movw r4,r20
 446 018a 6D89      		ldd r22,Y+21
 447 018c 7E89      		ldd r23,Y+22
 448 018e 8F89      		ldd r24,Y+23
 449 0190 988D      		ldd r25,Y+24
 451               	.LM35:
 452 0192 6A19      		sub r22,r10
 453 0194 7B09      		sbc r23,r11
 454 0196 8C09      		sbc r24,r12
 455 0198 9D09      		sbc r25,r13
 456 019a 621A      		sub r6,r18
 457 019c 730A      		sbc r7,r19
 458 019e 840A      		sbc r8,r20
 459 01a0 950A      		sbc r9,r21
 460 01a2 A401      		movw r20,r8
 461 01a4 9301      		movw r18,r6
 462 01a6 00D0      		rcall __mulsi3
 463 01a8 E218      		sub r14,r2
 464 01aa F308      		sbc r15,r3
 465 01ac 0409      		sbc r16,r4
 466 01ae 1509      		sbc r17,r5
 467 01b0 A801      		movw r20,r16
 468 01b2 9701      		movw r18,r14
 469 01b4 00D0      		rcall __udivmodsi4
 470 01b6 2A0D      		add r18,r10
 471 01b8 3B1D      		adc r19,r11
 472 01ba 4C1D      		adc r20,r12
 473 01bc 5D1D      		adc r21,r13
  75:gentoo.c      ****   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  76:gentoo.c      **** }
 475               	.LM36:
 476 01be B901      		movw r22,r18
 477 01c0 CA01      		movw r24,r20
 478               	/* epilogue start */
 479 01c2 CF91      		pop r28
 480 01c4 DF91      		pop r29
 481 01c6 1F91      		pop r17
 482 01c8 0F91      		pop r16
 483 01ca FF90      		pop r15
 484 01cc EF90      		pop r14
 485 01ce DF90      		pop r13
 486 01d0 CF90      		pop r12
 487 01d2 BF90      		pop r11
 488 01d4 AF90      		pop r10
 489 01d6 9F90      		pop r9
 490 01d8 8F90      		pop r8
 491 01da 7F90      		pop r7
 492 01dc 6F90      		pop r6
 493 01de 5F90      		pop r5
 494 01e0 4F90      		pop r4
 495 01e2 3F90      		pop r3
 496 01e4 2F90      		pop r2
 497 01e6 0895      		ret
 500               	.Lscope5:
 502               		.stabd	78,0,0
 504               	.global	main
 506               	main:
 507               		.stabd	46,0,0
  77:gentoo.c      **** 
  78:gentoo.c      **** int main(void){
 509               	.LM37:
 510               	.LFBB6:
 511 01e8 CF93      		push r28
 512 01ea DF93      		push r29
 513               	/* prologue: function */
 514               	/* frame size = 0 */
 515               	.LBB20:
 516               	.LBB21:
 518               	.Ltext7:
 520               	.LM38:
 521 01ec C398      		cbi 56-32,3
 523               	.LM39:
 524 01ee BB9A      		sbi 55-32,3
 525 01f0 00C0      		rjmp .L31
 526               	.L26:
 527               	.LBE21:
 528               	.LBE20:
 529               	.LBB22:
 531               	.Ltext8:
  79:gentoo.c      ****   //initialize GPIO pins
  80:gentoo.c      ****   set(PB3, 0);//set pb3 low
  81:gentoo.c      ****   
  82:gentoo.c      ****   //declare and initialize variables
  83:gentoo.c      ****   int32_t pause;
  84:gentoo.c      ****   //change this number to change the frequency
  85:gentoo.c      ****   //main loop
  86:gentoo.c      ****   while(1){    
  87:gentoo.c      ****     
  88:gentoo.c      ****     for (int i=0; i<max_count; i++) {
  89:gentoo.c      ****     tone = melody[i];
 533               	.LM40:
 534 01f2 FE01      		movw r30,r28
 535 01f4 EE0F      		lsl r30
 536 01f6 FF1F      		rol r31
 537 01f8 E050      		subi r30,lo8(-(melody))
 538 01fa F040      		sbci r31,hi8(-(melody))
 539 01fc 8081      		ld r24,Z
 540 01fe 8093 0000 		sts tone,r24
  90:gentoo.c      ****     beat = beats[i];
 542               	.LM41:
 543 0202 FE01      		movw r30,r28
 544 0204 E050      		subi r30,lo8(-(beats))
 545 0206 F040      		sbci r31,hi8(-(beats))
 546 0208 8081      		ld r24,Z
 547 020a 8093 0000 		sts beat,r24
  91:gentoo.c      ****     //tempo = get(ADC1);
  92:gentoo.c      ****     //tempo *= 2;
  93:gentoo.c      ****     duration = beat * tempo; // Set up timing
 549               	.LM42:
 550 020e 6091 0000 		lds r22,tempo
 551 0212 7091 0000 		lds r23,(tempo)+1
 552 0216 90E0      		ldi r25,lo8(0)
 553 0218 00D0      		rcall __mulhi3
 554 021a A0E0      		ldi r26,lo8(0)
 555 021c B0E0      		ldi r27,hi8(0)
 556 021e 8093 0000 		sts duration,r24
 557 0222 9093 0000 		sts (duration)+1,r25
 558 0226 A093 0000 		sts (duration)+2,r26
 559 022a B093 0000 		sts (duration)+3,r27
  94:gentoo.c      ****     
  95:gentoo.c      ****     playTone();
 561               	.LM43:
 562 022e 00D0      		rcall playTone
 564               	.LM44:
 565 0230 2196      		adiw r28,1
 566               	.L30:
 567 0232 8091 0000 		lds r24,max_count
 568 0236 9091 0000 		lds r25,(max_count)+1
 569 023a C817      		cp r28,r24
 570 023c D907      		cpc r29,r25
 571 023e 00F0      		brlo .L26
 572               	.LBE22:
 573               	.LBB23:
 574               	.LBB24:
 576               	.Ltext9:
 578               	.LM45:
 579 0240 C198      		cbi 56-32,1
 581               	.LM46:
 582 0242 B99A      		sbi 55-32,1
 583               	.LBE24:
 584               	.LBE23:
 586               	.Ltext10:
  96:gentoo.c      ****     
  97:gentoo.c      ****     // A pause between chirps
  98:gentoo.c      ****     }
  99:gentoo.c      ****     
 100:gentoo.c      ****     set(PB1, LOW);
 101:gentoo.c      ****     pause = map(get(ADC1), 0, 255, 0, 10000000);
 588               	.LM47:
 589 0244 8BE0      		ldi r24,lo8(11)
 590 0246 00D0      		rcall get
 591 0248 90E0      		ldi r25,lo8(0)
 592 024a A0E0      		ldi r26,lo8(0)
 593 024c B0E0      		ldi r27,hi8(0)
 594 024e BC01      		movw r22,r24
 595 0250 CD01      		movw r24,r26
 596 0252 20E8      		ldi r18,lo8(10000000)
 597 0254 36E9      		ldi r19,hi8(10000000)
 598 0256 48E9      		ldi r20,hlo8(10000000)
 599 0258 50E0      		ldi r21,hhi8(10000000)
 600 025a 00D0      		rcall __mulsi3
 601 025c 2FEF      		ldi r18,lo8(255)
 602 025e 30E0      		ldi r19,hi8(255)
 603 0260 40E0      		ldi r20,hlo8(255)
 604 0262 50E0      		ldi r21,hhi8(255)
 605 0264 00D0      		rcall __udivmodsi4
 606 0266 C901      		movw r24,r18
 607 0268 DA01      		movw r26,r20
 102:gentoo.c      ****     pause -= 30000;
 609               	.LM48:
 610 026a 8053      		subi r24,lo8(-(-30000))
 611 026c 9547      		sbci r25,hi8(-(-30000))
 612 026e A040      		sbci r26,hlo8(-(-30000))
 613 0270 B040      		sbci r27,hhi8(-(-30000))
 614 0272 20E0      		ldi r18,lo8(0)
 615 0274 30E0      		ldi r19,hi8(0)
 616 0276 40E0      		ldi r20,hlo8(0)
 617 0278 50E0      		ldi r21,hhi8(0)
 618 027a 00C0      		rjmp .L27
 619               	.L28:
 620               	.LBB25:
 103:gentoo.c      ****     for(uint32_t j = 0; j < pause; j++) asm volatile("nop\n\t"::); //pause
 622               	.LM49:
 623               	/* #APP */
 624               	 ;  103 "gentoo.c" 1
 625 027c 0000      		nop
 626               		
 627               	 ;  0 "" 2
 628               	/* #NOAPP */
 629 027e 2F5F      		subi r18,lo8(-(1))
 630 0280 3F4F      		sbci r19,hi8(-(1))
 631 0282 4F4F      		sbci r20,hlo8(-(1))
 632 0284 5F4F      		sbci r21,hhi8(-(1))
 633               	.L27:
 634 0286 2817      		cp r18,r24
 635 0288 3907      		cpc r19,r25
 636 028a 4A07      		cpc r20,r26
 637 028c 5B07      		cpc r21,r27
 638 028e 00F0      		brlo .L28
 639               	.LBE25:
 640               	.LBB26:
 641               	.LBB27:
 643               	.Ltext11:
 645               	.LM50:
 646 0290 C19A      		sbi 56-32,1
 648               	.LM51:
 649 0292 B99A      		sbi 55-32,1
 650               	.L31:
 651 0294 C0E0      		ldi r28,lo8(0)
 652 0296 D0E0      		ldi r29,hi8(0)
 653 0298 00C0      		rjmp .L30
 654               	.LBE27:
 655               	.LBE26:
 663               	.Lscope6:
 665               		.stabd	78,0,0
 666               	.global	melody
 667               		.data
 670               	melody:
 671 0000 A606      		.word	1702
 672 0002 4806      		.word	1608
 673 0004 EC05      		.word	1516
 674 0006 9805      		.word	1432
 675 0008 FD04      		.word	1277
 676 000a 7004      		.word	1136
 677 000c 9805      		.word	1432
 678 000e 7004      		.word	1136
 679 0010 1027      		.word	10000
 680               	.global	beats
 683               	beats:
 684 0012 04        		.byte	4
 685 0013 04        		.byte	4
 686 0014 03        		.byte	3
 687 0015 03        		.byte	3
 688 0016 03        		.byte	3
 689 0017 02        		.byte	2
 690 0018 02        		.byte	2
 691 0019 02        		.byte	2
 692 001a 01        		.byte	1
 693               	.global	max_count
 696               	max_count:
 697 001b 1200      		.word	18
 698               	.global	tempo
 701               	tempo:
 702 001d 3B01      		.word	315
 703               	.global	tone
 704               	.global	tone
 705               		.section .bss
 708               	tone:
 709 0000 00        		.skip 1,0
 710               	.global	beat
 711               	.global	beat
 714               	beat:
 715 0001 00        		.skip 1,0
 716               	.global	duration
 717               	.global	duration
 720               	duration:
 721 0002 0000 0000 		.skip 4,0
 722               		.comm i,2,1
 731               		.text
 733               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 gentoo.c
     /tmp/ccGt6gEE.s:2      *ABS*:0000003f __SREG__
     /tmp/ccGt6gEE.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccGt6gEE.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccGt6gEE.s:5      *ABS*:00000034 __CCP__
     /tmp/ccGt6gEE.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccGt6gEE.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccGt6gEE.s:76     .text:00000000 set
     /tmp/ccGt6gEE.s:142    .text:0000004c get
     /tmp/ccGt6gEE.s:232    .text:000000a0 __vector_9
     /tmp/ccGt6gEE.s:259    .text:000000b4 playTone
     /tmp/ccGt6gEE.s:708    .bss:00000000 tone
     /tmp/ccGt6gEE.s:720    .bss:00000002 duration
                            *COM*:00000002 i
     /tmp/ccGt6gEE.s:415    .text:0000015a map
     /tmp/ccGt6gEE.s:506    .text:000001e8 main
     /tmp/ccGt6gEE.s:670    .data:00000000 melody
     /tmp/ccGt6gEE.s:683    .data:00000012 beats
     /tmp/ccGt6gEE.s:714    .bss:00000001 beat
     /tmp/ccGt6gEE.s:701    .data:0000001d tempo
     /tmp/ccGt6gEE.s:696    .data:0000001b max_count

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__mulsi3
__udivmodsi4
__mulhi3
